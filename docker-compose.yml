services:
  postgres:
    image: postgres:17
    container_name: postgres_servicos
    environment:
      POSTGRES_DB: prestacao_servicos
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - servicos-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d prestacao_servicos"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_servicos
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      JWT_ISSUER: ${JWT_ISSUER}
      USER_ADMIN_PASSWORD: ${USER_ADMIN_PASSWORD}
      USER_ADMIN_EMAIL: ${USER_ADMIN_EMAIL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - servicos-net

volumes:
  pgdata:

networks:
  servicos-net:
    driver: bridge